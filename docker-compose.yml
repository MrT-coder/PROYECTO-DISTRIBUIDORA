version: '3.8'

services:
  rabbitmq:
    image: "rabbitmq:3.13-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    # --- AÑADIDO: Conectar a nuestra red ---
    networks:
      - distribuidora-net

  # Base de datos GENERAL
  mysql:
    image: "mysql:8.0"
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=ordenes_db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - distribuidora-net

  # MicroServicio de Órdenes
  servicio-ordenes:
    build:
      context: ./servicio-ordenes
    container_name: servicio-ordenes
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/ordenes_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=123
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    # --- AÑADIDO: Conectar a nuestra red ---
    networks:
      - distribuidora-net

  # MicroServicio de Inventario
  servicio-inventario:
    build:
      context: ./servicio_inventario
    container_name: servicio-inventario
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/inventario_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=123
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - distribuidora-net

  # MicroServicio de Cobros
  servicio-cobros:
    build:
      context: ./servicio-cobros
    container_name: servicio-cobros
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/cobros_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=123
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - distribuidora-net
      
  # Microservicio de Despacho
  servicio-despacho:
    build:
      context: ./servicio-despacho
    container_name: servicio-despacho
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/despacho_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=123
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - distribuidora-net

# Microservicio de Envios
  servicio-envio:
    build:
      context: ./servicio-envio
    container_name: servicio-envio
    ports:
      - "8084:8084" # Puerto diferente
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/envio_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=123
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - distribuidora-net
  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8090:8090"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_started
      servicio-ordenes:
        condition: service_started
      servicio-inventario:
        condition: service_started
      servicio-cobros:
        condition: service_started
      servicio-despacho:
        condition: service_started
      servicio-envio:
        condition: service_started
    networks:
      - distribuidora-net
# --- Definición de la red compartida ---
networks:
  distribuidora-net:
    driver: bridge

volumes:
  mysql_data: